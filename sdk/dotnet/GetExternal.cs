// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.External
{
    public static class GetExternal
    {
        public static Task<GetExternalResult> InvokeAsync(GetExternalArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExternalResult>("external:index/getExternal:getExternal", args ?? new GetExternalArgs(), options.WithDefaults());

        public static Output<GetExternalResult> Invoke(GetExternalInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExternalResult>("external:index/getExternal:getExternal", args ?? new GetExternalInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExternalArgs : global::Pulumi.InvokeArgs
    {
        [Input("programs", required: true)]
        private List<string>? _programs;
        public List<string> Programs
        {
            get => _programs ?? (_programs = new List<string>());
            set => _programs = value;
        }

        [Input("query")]
        private Dictionary<string, string>? _query;
        public Dictionary<string, string> Query
        {
            get => _query ?? (_query = new Dictionary<string, string>());
            set => _query = value;
        }

        [Input("workingDir")]
        public string? WorkingDir { get; set; }

        public GetExternalArgs()
        {
        }
        public static new GetExternalArgs Empty => new GetExternalArgs();
    }

    public sealed class GetExternalInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("programs", required: true)]
        private InputList<string>? _programs;
        public InputList<string> Programs
        {
            get => _programs ?? (_programs = new InputList<string>());
            set => _programs = value;
        }

        [Input("query")]
        private InputMap<string>? _query;
        public InputMap<string> Query
        {
            get => _query ?? (_query = new InputMap<string>());
            set => _query = value;
        }

        [Input("workingDir")]
        public Input<string>? WorkingDir { get; set; }

        public GetExternalInvokeArgs()
        {
        }
        public static new GetExternalInvokeArgs Empty => new GetExternalInvokeArgs();
    }


    [OutputType]
    public sealed class GetExternalResult
    {
        public readonly string Id;
        public readonly ImmutableArray<string> Programs;
        public readonly ImmutableDictionary<string, string>? Query;
        public readonly ImmutableDictionary<string, string> Result;
        public readonly string? WorkingDir;

        [OutputConstructor]
        private GetExternalResult(
            string id,

            ImmutableArray<string> programs,

            ImmutableDictionary<string, string>? query,

            ImmutableDictionary<string, string> result,

            string? workingDir)
        {
            Id = id;
            Programs = programs;
            Query = query;
            Result = result;
            WorkingDir = workingDir;
        }
    }
}
