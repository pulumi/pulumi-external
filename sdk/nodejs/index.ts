// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { GetExternalArgs, GetExternalResult, GetExternalOutputArgs } from "./getExternal";
export const getExternal: typeof import("./getExternal").getExternal = null as any;
export const getExternalOutput: typeof import("./getExternal").getExternalOutput = null as any;
utilities.lazyLoad(exports, ["getExternal","getExternalOutput"], () => require("./getExternal"));

export * from "./provider";
import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("external", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:external") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
